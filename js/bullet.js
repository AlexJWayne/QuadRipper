// Generated by CoffeeScript 1.3.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  window.Bullet = (function(_super) {

    __extends(Bullet, _super);

    Bullet.name = 'Bullet';

    Bullet.prototype.size = 1.5;

    Bullet.prototype.speed = 350;

    Bullet.prototype.spread = 0.06;

    function Bullet(pos, direction) {
      var scaleDistortion, spread;
      Bullet.__super__.constructor.call(this, new THREE.PlaneGeometry(this.size, this.size), new THREE.MeshBasicMaterial({
        color: 0xffff00
      }));
      scene.stage.mesh.add(this);
      this.position = pos.clone();
      this.position.z = 1;
      spread = new THREE.Vector3((Math.random() * 2 - 1) * this.spread, (Math.random() * 2 - 1) * this.spread);
      this.velocity = direction.normalize().addSelf(spread).multiplyScalar(this.speed);
      scaleDistortion = this.velocity.clone().normalize().multiplyScalar(3);
      scaleDistortion.x = Math.abs(scaleDistortion.x);
      scaleDistortion.y = Math.abs(scaleDistortion.y);
      this.scale.addSelf(scaleDistortion);
    }

    Bullet.prototype.update = function() {
      var hit, hits, ray;
      this.position.addSelf(this.velocity.clone().multiplyScalar(scene.stage.delta));
      if (Math.abs(this.position.x) > 110 || Math.abs(this.position.y) > 110) {
        this.expired = true;
      }
      ray = new THREE.Ray(this.position.clone(), this.velocity.clone().normalize());
      hits = ray.intersectObjects(scene.stage.enemies);
      hit = hits[0];
      if (hit && hit.distance < this.speed * scene.stage.delta) {
        hit.object.hit(this);
        return this.expired = true;
      }
    };

    return Bullet;

  })(THREE.Mesh);

}).call(this);
